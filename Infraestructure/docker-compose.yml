services:
  storage:
    container_name: storage
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./storage:/data
    command: server /data --console-address ":9001"
    env_file:
      - .env
    networks:
      - fugacero

  vdatabase:
    image: pgvector/pgvector:0.8.0-pg17
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - './postgres-data:/var/lib/postgresql/data'
    restart: always
    networks:
      - fugacero

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.16.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    env_file:
      - .env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - fugacero

  streaming:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://streaming-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://streaming-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr streaming-0:33145
      - --advertise-rpc-addr streaming-0:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info
    image: redpandadata/redpanda:latest
    container_name: streaming-0
    volumes:
      - ./streaming:/var/lib/redpanda/data
    networks:
      - fugacero
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  spark-master:
    image: apache/spark-py
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./apps:/opt/spark-apps
      - ./data:/opt/spark-data
    env_file:
      - .env
    networks:
      - fugacero

  mage:
    image: mageai/mageai:latest
    command: mage start ${PROJECT_NAME}
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      USER_CODE_PATH: /home/src/${PROJECT_NAME}
      POSTGRES_DBNAME: ${POSTGRES_DBNAME}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - 6789:6789
    volumes:
      - ./etl:/home/src/
    restart: on-failure:5
    networks:
      - fugacero

networks:
  fugacero:
    driver: bridge